name: publish

on:
  release:
    types:
      - published

jobs:
  publish-npm:
    name: publish npm package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2.3.4
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: caching node modules
        uses: actions/cache@v2.1.8
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ matrix.node-version }}
            ${{ runner.OS }}-build
      - name: installing dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true
      - name: publish
        run: $(yarn bin)/npm-deploy-git-tag
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-gpr:
    name: publish GitHub package
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [14.x]
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2.3.4
      - name: setup node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com
          scope: '@gofunky'
      - name: caching node modules
        uses: actions/cache@v2.1.8
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ matrix.node-version }}
            ${{ runner.OS }}-build
      - name: installing dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true
      - name: publish
        # workaround until https://github.com/actions/setup-node/issues/67 is solved
        run: |
          $(yarn bin)/json -I -f package.json -e "this.name=\"@${{ github.repository }}\""
          $(yarn bin)/npm-deploy-git-tag
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-pages:
    name: publish GitHub Pages
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2.3.4
      - name: publish pages to Siteleaf
        id: siteleaf
        uses: ./
        with:
          api-key: ${{ secrets.SITELEAF_API_KEY }}
          api-secret: ${{ secrets.SITELEAF_API_SECRET }}
          site: ${{ secrets.SITELEAF_SITE_ID }}
      - name: Check outputs
        run: |
          echo "Siteleaf Page Name: ${{ steps.siteleaf.outputs.name }}"
